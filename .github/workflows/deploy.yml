name: Build and Deploy ASP.NET Core with Docker Compose

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Build Docker image
        run: |
          if [ "${{ github.ref_name }}" == "develop" ]; then
            docker build \
              --build-arg BUILD_CONFIGURATION=Debug \
              --build-arg ASPNETCORE_ENVIRONMENT=Development \
              -t nuu042/mylio:develop .
          else
            docker build \
              --build-arg BUILD_CONFIGURATION=Release \
              --build-arg ASPNETCORE_ENVIRONMENT=Production \
              -t nuu042/mylio:latest .
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          if [ "${{ github.ref_name }}" == "develop" ]; then
            docker push nuu042/mylio:develop
          else
            docker push nuu042/mylio:latest
          fi

      - name: Configure SSH with PEM Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PEM_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          ssh-keyscan -H ${{ secrets.DEPLOY_SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.server.yml to remote server
        env:
          DEPLOY_SERVER_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          DEPLOY_SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }}
          DEPLOY_SERVER_PORT: ${{ secrets.DEPLOY_SERVER_PORT }}
        run: |
          scp -i ~/.ssh/key.pem -P $DEPLOY_SERVER_PORT -o StrictHostKeyChecking=no docker-compose.server.yml \
              $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP:/home/ubuntu/project/back/build/docker-compose.server.yml

      - name: Debug copied files
        env:
          DEPLOY_SERVER_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          DEPLOY_SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }}
          DEPLOY_SERVER_PORT: ${{ secrets.DEPLOY_SERVER_PORT }}
        run: |
          ssh -i ~/.ssh/key.pem -p $DEPLOY_SERVER_PORT -o StrictHostKeyChecking=no $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP << 'EOF'
          echo "Files in /home/ubuntu/project/back/build:"
          ls -la /home/ubuntu/project/back/build
          EOF

      - name: Deploy using Docker Compose
        env:
          DEPLOY_SERVER_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          DEPLOY_SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }}
          DEPLOY_SERVER_PORT: ${{ secrets.DEPLOY_SERVER_PORT }}
          TAG: ${{ github.ref_name }}
          ENVIRONMENT: ${{ secrets.ASPNETCORE_ENVIRONMENT }}
        run: |
          ssh -i ~/.ssh/key.pem -p $DEPLOY_SERVER_PORT -o StrictHostKeyChecking=no $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP << 'EOF'
          cd /home/ubuntu/project/back/build
          export TAG=${TAG}
          export ENVIRONMENT=${ENVIRONMENT}
          docker-compose -f docker-compose.server.yml down || true
          docker-compose -f docker-compose.server.yml pull
          docker-compose -f docker-compose.server.yml up -d
          EOF
