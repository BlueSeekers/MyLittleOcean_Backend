name: Build and Deploy ASP.NET Core with Docker Compose

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리에서 코드 가져오기
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      # 2. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build --build-arg BUILD_CONFIGURATION=Release \
                       --build-arg ASPNETCORE_ENVIRONMENT=Production \
                       -t nuu042/mylio:latest .

      # 4. Docker 이미지 푸시
      - name: Push Docker image
        run: |
          docker push nuu042/mylio:latest

      # 5. 원격 서버에 Docker Compose 파일 복사
      - name: Copy docker-compose.server.yml to remote server
        env:
          DEPLOY_SERVER_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          DEPLOY_SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }}
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP:/home/$DEPLOY_SERVER_USER/

      # 6. 원격 서버에서 Docker Compose로 배포
      - name: Deploy using Docker Compose
        env:
          DEPLOY_SERVER_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          DEPLOY_SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP << 'EOF'
          cd /home/$DEPLOY_SERVER_USER/project/back/build
          docker-compose down || true
          docker-compose pull
          docker-compose up -d
          EOF
